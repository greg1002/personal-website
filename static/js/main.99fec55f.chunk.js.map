{"version":3,"sources":["Panel.js","App.js","index.js"],"names":["Panel","getCardMedia","json","image","CardMedia","src","process","component","getIcon","type","School","Work","Business","Code","MenuBook","Error","getCardIcons","icons","Grid","container","map","icon","item","xs","sm","Box","p","display","alignItems","pl","Typography","variant","text","getCardContent","CardContent","align","title","className","subtitle","color","date","body","Array","isArray","getCardSkills","skills","getCardTags","tags","length","flexWrap","flexDirection","tag","mt","mr","Chip","label","size","skill","minWidth","name","ml","flexGrow","LinearProgress","value","getCardActions","links","CardActions","link","Button","href","fullWidth","this","props","Card","Component","require","App","SectionList","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","default","position","overflow","height","listSection","ul","padding","classes","List","subheader","section","Section","maxWidth","breakpoints","Fragment","Header","ListItem","Container","Timeline","Panels","spacing","ListSubheader","panels","panel","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","md","lg","xl","defaultTheme","createMuiTheme","typography","fontFamily","join","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.99fec55f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardContent, CardActions, CardMedia, Typography, Button, Grid, Box, Chip, LinearProgress } from '@material-ui/core';\r\nimport { School, Work, Business, Code, Error, MenuBook } from '@material-ui/icons';\r\nimport './fonts.css';\r\n\r\n/*\r\nJSON FORMAT:\r\n{\r\n  image:\r\n  title:\r\n  subtitle:\r\n  body:\r\n  links: [\r\n    {\r\n      name:\r\n      href:\r\n    }, ...\r\n  ]\r\n}\r\n\r\n*/\r\nexport default class Panel extends Component {\r\n\r\n  getCardMedia = (json) => {\r\n    return json.image == null ? <div /> :\r\n    <CardMedia\r\n      src={process.env.PUBLIC_URL + json.image}\r\n      component=\"img\"\r\n    />\r\n  }\r\n\r\n  getIcon = (type) => {\r\n    switch(type) {\r\n      case \"school\": return <School/>\r\n      case \"work\": return <Work />\r\n      case \"business\": return <Business />\r\n      case \"code\": return <Code />\r\n      case \"book\": return <MenuBook />\r\n      default: return <Error />\r\n    }\r\n  }\r\n\r\n  getCardIcons = (icons) => {\r\n    return icons == null ? <div /> :\r\n    <Grid container>{\r\n        icons.map(icon => {\r\n          return (\r\n            <Grid item xs={12} sm={6}>\r\n              <Box p={1} display=\"flex\" alignItems=\"center\">\r\n                {this.getIcon(icon.type)}\r\n                <Box pl={2}>\r\n                  <Typography variant=\"body2\">{icon.text}</Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          )\r\n        })\r\n      }</Grid>\r\n  }\r\n\r\n  getCardContent = (json) => {\r\n    return (\r\n      <CardContent align=\"left\">\r\n        {\r\n          json.title == null ? <div /> :\r\n          <Typography className=\"courier\" variant=\"h6\" component=\"h2\">\r\n            {json.title}\r\n          </Typography>\r\n        }\r\n        {\r\n          json.subtitle == null ? <div /> :\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            {json.subtitle}\r\n          </Typography>\r\n        }\r\n        {\r\n          json.date == null ? <div /> :\r\n          <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n            {json.date}\r\n          </Typography>\r\n        }\r\n        {\r\n          json.body == null ? <div /> :\r\n          Array.isArray(json.body) ?\r\n          json.body.map(text => {\r\n            return (\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {\"â€¢ \" + text}\r\n              </Typography>\r\n            );\r\n          }) :\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {json.body}\r\n          </Typography>\r\n        }\r\n        {\r\n          json.icons == null ? <div /> : this.getCardIcons(json.icons)\r\n        }\r\n        {this.getCardSkills(json.skills)}\r\n        {this.getCardTags(json.tags)}\r\n      </CardContent>\r\n    )\r\n  }\r\n\r\n  getCardTags = (tags) => {\r\n    return tags == null || tags.length === 0 ? <div /> :\r\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">{\r\n        tags.map(tag => {\r\n          return (\r\n            <Box mt={1} mr={1}>\r\n              <Chip\r\n                label={tag}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n              />\r\n            </Box>\r\n          )\r\n        })\r\n      }</Box>\r\n\r\n  }\r\n\r\n  getCardSkills = (skills) => {\r\n    return skills == null || skills.length === 0 ? <div /> :\r\n    <Grid container>{\r\n        skills.map(skill => {\r\n          return (\r\n            <Grid item xs={12}>\r\n              <Box p={1} display=\"flex\" alignItems=\"center\">\r\n                <Box minWidth={100}>\r\n                  <Typography variant=\"body2\">{skill.name}</Typography>\r\n                </Box>\r\n                <Box ml={2} flexGrow={1}>\r\n                  <LinearProgress variant=\"determinate\" value={skill.value}/>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          )\r\n        })\r\n      }</Grid>\r\n  }\r\n\r\n  getCardActions = (json) => {\r\n    return json.links == null || json.links.length === 0 ? <div /> :\r\n    <CardActions><Grid container>\r\n      {\r\n        json.links.map(link => {\r\n          return (\r\n            <Grid item xs={12 / json.links.length}>\r\n              <Button href={link.href} size=\"small\" fullWidth=\"true\" color=\"primary\">\r\n              {link.name}\r\n              </Button>\r\n            </Grid>\r\n          )\r\n        })\r\n      }\r\n    </Grid></CardActions>\r\n  }\r\n\r\n  render() {\r\n    const { json } = this.props;\r\n    return (\r\n      <Card>\r\n        {this.getCardMedia(json)}\r\n        {this.getCardContent(json)}\r\n        {this.getCardActions(json)}\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Panel from './Panel.js';\r\nimport { Container, Grid, Typography, Box, ListSubheader, ListItem, List, Fragment } from '@material-ui/core';\r\nimport { Timeline, TimelineItem, TimelineSeparator, TimelineConnector, TimelineContent, TimelineDot, TimelineOppositeContent } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nvar json = require('./info.json');\r\n\r\nexport default function App() {\r\n    return (\r\n      <SectionList />\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.default,\r\n    position: 'absolute',\r\n    overflow: 'auto',\r\n    height: '100%'\r\n  },\r\n  listSection: {\r\n    backgroundColor: 'inherit',\r\n  },\r\n  ul: {\r\n    backgroundColor: 'inherit',\r\n    padding: 0,\r\n  },\r\n\r\n}));\r\n\r\nfunction SectionList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root} subheader={<li />}>{\r\n      json.map(section => {\r\n        return (\r\n          <li className={classes.listSection}>\r\n            <ul className={classes.ul}>\r\n              <Section json={section}/>\r\n            </ul>\r\n          </li>\r\n        )\r\n      })\r\n    }</List>\r\n  )\r\n}\r\n\r\nfunction Section(props) {\r\n  const classes = useStyles();\r\n  const { name, type, maxWidth, breakpoints } = props.json;\r\n  return (\r\n    <React.Fragment>\r\n      <Header name={name} />\r\n      <ListItem>\r\n        {\r\n          type === \"timeline\" ?\r\n          <Container maxWidth={maxWidth}>\r\n            <Timeline align=\"alternate\">\r\n              <Panels json={props.json} />\r\n            </Timeline>\r\n          </Container> :\r\n          <Container maxWidth={maxWidth}>\r\n            <Grid container alignItems=\"stretch\" spacing={3}>\r\n              <Panels json={props.json} />\r\n            </Grid>\r\n          </Container>\r\n        }\r\n      </ListItem>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nfunction Header(props) {\r\n  const { name } = props;\r\n  return (\r\n    <ListSubheader color='inherit'>\r\n      <Box p={2}>\r\n        <Typography align=\"center\" variant=\"h5\">{name}</Typography>\r\n      </Box>\r\n    </ListSubheader>\r\n  )\r\n}\r\n\r\nfunction Panels(props) {\r\n  const { panels, type, breakpoints } = props.json;\r\n  return (\r\n    panels.map(panel => {\r\n      return (\r\n        type === \"timeline\" ?\r\n        <TimelineItem>\r\n          {panel.date == null ? <div /> : <TimelineOppositeContent><Typography variant=\"subtitle2\">{panel.date}</Typography></TimelineOppositeContent>}\r\n          <TimelineSeparator>\r\n            <TimelineDot color=\"primary\"/>\r\n            {panels[panels.length - 1] === panel ? <div /> : <TimelineConnector/>}\r\n          </TimelineSeparator>\r\n          <TimelineContent><Panel json={{...panel,date: null}} /></TimelineContent>\r\n        </TimelineItem> :\r\n        <Grid\r\n          xs={breakpoints.xs} sm={breakpoints.sm} md={breakpoints.md}\r\n          lg={breakpoints.lg} xl={breakpoints.xl} item>\r\n          <Panel json={panel} />\r\n        </Grid>\r\n      );\r\n    })\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst defaultTheme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#f5f5f5',\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={defaultTheme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}